@*We NEED to make sure variable names are the same in the models - I just put what we need for now as the variable names*@
@*General Login*@

@using Final_Project_Group20_1.Models
@model LoginViewModel 
@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            <form asp-action="Login" asp-controller="Account" asp-route-ReturnUrl="@ViewBag.ReturnUrl" method="post" class="form-horizontal" role="form">
                @Html.AntiForgeryToken()
                <h4>Log in</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>

                <p>

                    <a asp-action="Index" asp-controller="Home">go to registration choice page </a>

                </p>
            </form>
        </section>
    </div>
</div>